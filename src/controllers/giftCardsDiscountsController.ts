/**
 * reloadly-sdkLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiError } from '@apimatic/core';
import { ApiResponse, RequestOptions } from '../core';
import { optional, string, unknown } from '../schema';
import { BaseController } from './baseController';

export class GiftCardsDiscountsController extends BaseController {
  /**
   * @param accept
   * @param authorization
   * @param size          Indicates the number of gift card products offering discounts to be retrieved on a
   *                                page.
   * @param page          Indicates the page of the list of gift card products offering discounts.
   * @return Response from the API call
   */
  async reloadlyGiftCardsDiscounts(
    accept: string,
    authorization: string,
    size?: string,
    page?: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET');
    req.baseUrl('Gift Cards');
    const mapped = req.prepareArgs({
      accept: [accept, string()],
      authorization: [authorization, string()],
      size: [size, optional(string())],
      page: [page, optional(string())],
    });
    req.header('Accept', mapped.accept);
    req.header('Authorization', mapped.authorization);
    req.appendTemplatePath`/discounts`;
    req.throwOn(401, ApiError, 'Full authentication is required to access this resource');
    req.throwOn(404, ApiError, 'Not Found');
    req.authenticate(false);
    return req.callAsJson(unknown(), requestOptions);
  }

  /**
   * @param accept
   * @param authorization
   * @param productid     The product's identification number.
   * @return Response from the API call
   */
  async reloadlyGiftCardsDiscountByProductId(
    accept: string,
    authorization: string,
    productid: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<unknown>> {
    const req = this.createRequest('GET');
    req.baseUrl('Gift Cards');
    const mapped = req.prepareArgs({
      accept: [accept, string()],
      authorization: [authorization, string()],
      productid: [productid, string()],
    });
    req.header('Accept', mapped.accept);
    req.header('Authorization', mapped.authorization);
    req.appendTemplatePath`/products/${mapped.productid}/discounts`;
    req.throwOn(401, ApiError, 'Full authentication is required to access this resource');
    req.throwOn(404, ApiError, 'Not found');
    req.authenticate(false);
    return req.callAsJson(unknown(), requestOptions);
  }
}
